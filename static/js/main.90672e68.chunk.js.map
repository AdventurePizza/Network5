{"version":3,"sources":["firebaseContext.tsx","assets/green-loader.gif","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getRequest","Promise","resolve","isSuccessful","setRequest","getRequests","setAnswer","fetchBase","FirebaseProvider","children","useCallback","timeStamp","a","fetch","method","fetchRes","ok","json","request","headers","body","JSON","stringify","message","statusText","answer","requestTimestamp","Provider","value","useStyles","makeStyles","theme","createStyles","root","display","size","width","spacing","height","preview","containedSuccess","backgroundColor","palette","success","main","color","dark","disabled","Tezos","TezosToolkit","wallet","BeaconWallet","name","preferblackNetwork","setWalletProvider","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","versionNames","uuidv4","App","classes","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","useContext","useSnackbar","enqueueSnackbar","requests","setRequests","answers","setAnswers","version","view","setView","requestInput","setRequestInput","prizeInput","selectedRequest","setSelectedRequest","imageInput","setImageInput","image","setImage","messageInput","setMessageInput","resultImages","setResultImages","transactionWait","setTransactionWait","setTotalBounty","setCollectedBounty","isMobile","innerWidth","hoverText","setHoverText","selectedHoverText","setSelectedHoverText","hoveringRequest","setHoveringRequest","selectedReqRef","useRef","getActiveAccount","clearActiveAccount","then","sync","address","console","log","requestPermissions","permissions","useEffect","tempTotalBounty","i","length","bounty","tempCollectedBounty","owner","result","timestamp","tempAnswers","prize","getProfiles","onRequestChange","data","concat","sort","b","parseFloat","on","off","slice","getAcc","getSearchedUnsplashImages","text","axios","get","params","query","authorization","searchImages","input","response","imageDataWanted","results","map","urls","alt_description","id","alt","imageLink","regular","thumbnailLink","thumb","className","style","fontSize","alignItems","marginLeft","fontFamily","marginRight","marginTop","Select","label","onChange","e","target","href","MenuItem","textAlign","position","margin","Button","title","onClick","unsync","overflowX","border","onMouseEnter","onMouseLeave","Card","ref","raised","current","scrollIntoView","behavior","inline","block","CardActionArea","paddingTop","bottom","overflowY","variant","index","justifyContent","marginBottom","Avatar","src","loadingGif","requestOperation","operationDetails","kind","TezosOperationType","TRANSACTION","destination","amount","toString","catch","marginInline","TextField","placeholder","fullWidth","event","Date","now","emit","IconButton","onKeyPress","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.90672e68.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\n\nexport interface IFirebaseContext {\n  getRequest: (key: string) => Promise<IFetchResponseBase>;\n  setRequest: (request) => Promise<IFetchResponseBase>;\n  getRequests: () => Promise<IFetchResponseBase>;\n  setAnswer: (answer, requestTimestamp) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getRequest: () => Promise.resolve({ isSuccessful: false }),\n  setRequest: () => Promise.resolve({ isSuccessful: false }),\n  getRequests: () => Promise.resolve({ isSuccessful: false }),\n  setAnswer: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network5-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getRequest = useCallback(\n    async (timeStamp: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request/${timeStamp}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setRequest = useCallback(\n    async (request): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ request: request }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getRequests =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/requests`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const setAnswer = useCallback(\n    async (answer, requestTimestamp): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/answer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ answer: answer, requestTimestamp: requestTimestamp }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getRequest,\n        setRequest,\n        getRequests,\n        setAnswer,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/green-loader.2c2db02c.gif\";","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\n\n//ui\nimport {\n  Button, Select, MenuItem, TextField, Avatar, IconButton, makeStyles, createStyles, Card, CardActionArea\n} from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient, TezosOperationType } from \"@airgap/beacon-sdk\";\nimport { TezosToolkit } from '@taquito/taquito'\nimport {\n  BeaconWallet,\n} from '@taquito/beacon-wallet'\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\nimport axios from 'axios';\nimport purple from \"@material-ui/core/colors/purple\";\nimport loadingGif from \"./assets/green-loader.gif\"\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    size: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n    },\n    preview: {\n      width: theme.spacing(40),\n      height: theme.spacing(40),\n    },\n    containedSuccess: {\n      backgroundColor: theme.palette.success.main,\n      color: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark\n      }\n    },\n    disabled: {}\n  }),\n);\n\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie')\nconst wallet = new BeaconWallet({\n  name: 'hicetnunc.xyz',\n  preferblackNetwork: 'mainnet',\n})\nTezos.setWalletProvider(wallet)\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network5backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const classes = useStyles();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n\n  const { getRequest, setRequest, getRequests, setAnswer } =\n    useContext(FirebaseContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [requests, setRequests] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [version] = useState(5);\n  const [view, setView] = useState(\"answers\");\n  const [requestInput, setRequestInput] = useState();\n  const [prizeInput, setPrizeInput] = useState(0.003);\n  const [selectedRequest, setSelectedRequest] = useState();\n  const [imageInput, setImageInput] = useState();\n  const [image, setImage] = useState();\n  const [messageInput, setMessageInput] = useState();\n  const [resultImages, setResultImages] = useState();\n  const [transactionWait, setTransactionWait] = useState();\n  const [totalBounty, setTotalBounty] = useState(0);\n  const [collectedBounty, setCollectedBounty] = useState(0);\n  const isMobile = window.innerWidth <= 950;\n  const [hoverText, setHoverText] = useState(\"\");\n  const [selectedHoverText, setSelectedHoverText] = useState(\"\");\n  const [hoveringRequest, setHoveringRequest] = useState(0);\n  const selectedReqRef = useRef()\n\n  /*\n  useEffect(() => {\n    if (resultImages.length > 0) return;\n\n    searchSubmit('sky');\n  }, [isImagesEmpty, setImages, searchSubmit]);\n*/\n  useEffect(() => {\n    console.log(\"answers\")\n    console.log(answers)\n    let tempTotalBounty = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (answers[i].bounty)\n        tempTotalBounty += answers[i].bounty;\n    }\n    setTotalBounty(tempTotalBounty);\n\n    let tempCollectedBounty = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (activeAccount && answers[i].owner === activeAccount.address && answers[i].bounty)\n        tempCollectedBounty += answers[i].bounty;\n    }\n    setCollectedBounty(tempCollectedBounty);\n\n    console.log(\"tempTotalBounty \" + tempTotalBounty)\n    console.log(\"tempCollectedBounty \" + tempCollectedBounty)\n  }, [selectedRequest, answers]);\n\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getRequests();\n      console.log(result)\n      setRequests(result);\n      if (result.length > 0) {\n        setSelectedRequest(result[0]);\n\n        let tempAnswers = await getRequest(result[0].timestamp);\n        setAnswers(tempAnswers);\n        let tempTotalBounty = 0;\n        for (let i = 0; i < tempAnswers.length; i++) {\n          if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n            tempTotalBounty++;\n        }\n\n        setSelectedHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * result[0].prize}`)\n      }\n    }\n    getProfiles();\n  }, [getRequests]);\n\n  useEffect(() => {\n    const onRequestChange = (data) => {\n      setRequests(\n        requests\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n    };\n\n    socket.on(\"request\", onRequestChange);\n\n    return () => {\n      socket.off(\"request\", onRequestChange);\n    };\n  }, [requests]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  const getSearchedUnsplashImages = async (text: string) =>\n    await axios.get('https://api.unsplash.com/search/photos?per_page=15', {\n      params: { query: text },\n      headers: {\n        authorization: 'Client-ID oSwI9b8UY-1ZV8yBYyH871XgVv8vCBT2jwj0xIol0hM'\n      }\n    });\n\n  const handleRequestInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRequestInput(event.target.value.slice(0, 250));\n  };\n\n  const handlePrizeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrizeInput(event.target.value);\n  };\n\n  const handleImageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImageInput(event.target.value);\n  };\n\n  const handleMessageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(event.target.value.slice(0, 250));\n  };\n\n  const searchImages = async (input) => {\n    const response = await getSearchedUnsplashImages(input);\n    console.log(response);\n\n    const imageDataWanted = response.data.results.map(\n      ({ urls, alt_description, id }: IResponseDataUnsplash) => {\n        const { regular, thumb } = urls;\n        return {\n          alt: alt_description,\n          imageLink: regular,\n          thumbnailLink: thumb,\n          id: id\n        };\n      }\n    );\n\n    setResultImages(imageDataWanted);\n\n  };\n\n  const onKeyPressImageSearch = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      searchImages(event.target.value)\n    }\n  };\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          marginLeft: 6,\n          width: \"80%\",\n\n        }}\n      >\n        <div\n          style={{\n            fontSize: \"1.5em\",\n            fontFamily: \"Tangerine\",\n            marginRight: 10,\n            marginTop: 6\n          }}\n        >\n          <b>Network </b>\n        </div>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            let target;\n            if (e.target.value === 1) {\n              target = \"https://network1.cc/\";\n            } else if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            }\n            else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            }\n            else if (e.target.value === 4) {\n              target = \"https://adventurepizza.github.io/Network4/\";\n            }\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n          <MenuItem value={4}> {versionNames[4]}</MenuItem>\n          <MenuItem value={5}> {versionNames[5]}</MenuItem>\n\n        </Select>\n        &nbsp; 📠\n        {!isMobile &&\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\n            <b> Try Network, Request from the Network, Answer Requests, Reward Responses  </b>\n          </div>}\n      </div>\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\", backgroundColor: \"white\", margin: 6 }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n\n      </div>\n      {isMobile &&\n        <div style={{ textAlign: \"center\", width: \"100%\", marginTop: 10 }}>\n          <b> Try Network, Request from the Network, Answer Requests, Reward Responses 🧧 </b>\n        </div>}\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>Requests</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n\n        <div style={{ textAlign: \"center\", margin: 2 }}>\n\n          <Button\n            onClick={async () => {\n              //add req\n              setView(\"+request\");\n            }}\n            style={{ height: \"100%\", border: \"solid 2px \" }}\n          >\n            add new request\n          </Button>\n        </div>\n\n\n        {requests &&\n          requests.map((request) => (\n            <div\n              key={request.timestamp}\n              style={{ textAlign: \"center\", margin: 2 }}\n              onMouseEnter={\n                async () => {\n                  //fetch and set hover text\n                  if (selectedRequest !== request.timestamp) {\n                    let tempAnswers = await getRequest(request.timestamp);\n                    let tempTotalBounty = 0;\n                    for (let i = 0; i < tempAnswers.length; i++) {\n                      if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n                        tempTotalBounty++;\n                    }\n\n                    setHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * request.prize}`)\n                    setHoveringRequest(request.timestamp)\n                  }\n                }\n              }\n              onMouseLeave={() => {\n                setHoveringRequest(0)\n              }}\n            >\n\n              <Card\n                ref={(selectedRequest && request.timestamp === selectedRequest.timestamp) ? selectedReqRef : null}\n                raised={selectedRequest && request.timestamp === selectedRequest.timestamp}\n                onClick={async () => {\n                  //open answers\n                  //console.log(await getRequest(request.timestamp))\n\n                  setAnswers(await getRequest(request.timestamp));\n                  setView(\"answers\");\n                  setSelectedRequest(request);\n                  if (!isMobile) {\n                    setSelectedHoverText(hoverText)\n                  }\n                  else {\n                    let tempAnswers = await getRequest(request.timestamp);\n                    let tempTotalBounty = 0;\n                    for (let i = 0; i < tempAnswers.length; i++) {\n                      if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n                        tempTotalBounty++;\n                    }\n\n                    setSelectedHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * request.prize}`)\n\n                  }\n                  selectedReqRef.current.scrollIntoView({ behavior: 'smooth', inline: \"center\", block: \"nearest\" })\n                }}\n                style={{ width: 320, height: 85, margin: 2 }}\n              >\n                <CardActionArea\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <div style={{ position: \"relative\", height: \"100%\" }}>\n                    <div style={{ fontSize: \"1.2em\", paddingTop: 10 }}>\n                      <b>{request.request}</b>\n                    </div>\n                    <div style={{ fontSize: \"0.9em\", position: \"absolute\", bottom: 10, width: \"100%\" }}>\n                      {(request.timestamp === hoveringRequest) && !(selectedRequest && request.timestamp === selectedRequest.timestamp) && <b> {hoverText}</b>}\n                      {(selectedRequest && request.timestamp === selectedRequest.timestamp) && <b> {selectedHoverText}</b>}\n\n                    </div>\n                  </div>\n                </CardActionArea>\n              </Card>\n\n            </div>\n          ))}\n      </div>\n\n      {view === \"answers\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13, overflowY: \"auto\" }}>\n            <b>Answers</b>\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              width: \"100%\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              overflowX: \"scroll\",\n            }}\n          >\n            {selectedRequest &&\n              <>\n                <div style={{ textAlign: \"center\", margin: 6 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={async () => {\n                      //add answer\n                      setView(\"+answer\");\n                    }}\n                  >\n                    ADD\n                  </Button>\n                </div>\n              </>\n            }\n            {answers &&\n              answers.map((answer, index) => (\n                <div\n                  key={answer.timestamp}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n                  <div\n                    style={{\n                      width: \"100%\",\n                    }}\n                  >\n\n                    <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10 }}>\n                      {answer.image &&\n                        <Avatar variant=\"rounded\" src={answer.image.imageLink} alt={answer.image.alt} className={classes.preview} />}\n                    </div>\n                    <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10 }}>\n\n                      {transactionWait === answer.timestamp ? <img src={loadingGif} height=\"40\"></img> : (transactionWait === answer.timestamp * -1 ? <>Domo ✅</> :\n\n                        <Button\n                          variant=\"contained\"\n                          className={classes.containedSuccess}\n                          title={\"domo\"}\n                          onClick={async () => {\n                            // sent from activeAccount.address to answer.owner amount selectedRequest.prize\n                            setTransactionWait(answer.timestamp);\n                            dAppClient.requestOperation({\n                              operationDetails: [\n                                {\n                                  kind: TezosOperationType.TRANSACTION,\n                                  destination: answer.owner, // Send to ourselves\n                                  amount: (selectedRequest.prize * 1000000).toString(), // Amount in mutez, the smallest unit in Tezos\n                                },\n                              ],\n                            }).then(response => {\n                              console.log(response);\n                              setTransactionWait(answer.timestamp * -1);\n                              setAnswer({\n                                ...answer,\n                                bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                              }, selectedRequest.timestamp)\n\n                              setAnswers([\n                                ...answers.slice(0, index),\n                                {\n                                  ...answer,\n                                  bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                                },\n                                ...answers.slice(index + 1)\n                              ])\n\n                            }).catch(e => {\n                              console.log(e);\n                              setTransactionWait(0);\n                            });\n\n\n                          }}\n                          style={{ border: \"solid 2px \" }}\n                        >\n                          send a {selectedRequest.prize} ꜩ gift 🧧\n                        </Button>\n\n                      )}\n                    </div>\n                    <Button\n                      title={answer.timestamp}\n                      onClick={async () => {\n                        //open answers\n                      }}\n                      style={{ width: \"100%\", border: \"solid 2px \" }}\n                    >\n                      {answer.message}\n                    </Button>\n\n\n                  </div>\n\n                </div>\n              ))}\n          </div>\n        </>\n      }\n\n      {view === \"+request\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Request</b>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Request\"\n              variant=\"outlined\"\n              placeholder=\"recommend wallpaper\"\n              fullWidth\n              onChange={handleRequestInput}\n              value={requestInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  })\n                  setRequests(requests\n                    .concat([\n                      {\n                        ...requests,\n                        request: requestInput,\n                        prize: parseFloat(prizeInput),\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n\n                  setSelectedRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp\n                  });\n                  setView(\"answers\")\n\n                  socket.emit(\"request\", {\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  });\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n      }\n      {view === \"+answer\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Answer</b>\n            <br></br>\n            <br></br>\n            {selectedRequest.request}\n            <br></br>\n            <br></br>\n            <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n              <div className=\"background-icon-list\" >\n                {resultImages &&\n                  resultImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                    <IconButton\n                      key={id}\n                      onClick={() =>\n                        //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                        //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                        setImage({ alt, thumbnailLink, imageLink, id })\n                      }\n\n                    >\n                      <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} className={classes.size} />\n                    </IconButton>\n                  ))\n                }\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Search Unsplash\"\n                variant=\"outlined\"\n                placeholder=\"Sky\"\n                fullWidth\n                onChange={handleImageInput}\n                onKeyPress={onKeyPressImageSearch}\n                value={imageInput}\n              />\n              <div style={{ margin: 10 }}>\n                <Button\n                  onClick={() => {\n                    searchImages(imageInput)\n                  }}\n\n                >\n                  search\n                </Button>\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Message\"\n              variant=\"outlined\"\n              placeholder=\"Light blue can be refreshing\"\n              fullWidth\n              onChange={handleMessageInput}\n              value={messageInput}\n            />\n            <br></br>\n            <br></br>\n            <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n              {image &&\n                <Avatar variant=\"rounded\" src={image.imageLink} alt={image.alt} className={classes.preview} />}\n            </div>\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setAnswer({\n                    message: messageInput,\n                    image: image,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                    bounty: 0\n                  }, selectedRequest.timestamp)\n\n                  setAnswers(answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        image: image,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                        bounty: 0\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n                  setView(\"answers\")\n\n                  let tempAnswers = answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        image: image,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                        bounty: 0\n                      },\n                    ]);\n\n                  let tempTotalBounty = 0;\n                  for (let i = 0; i < tempAnswers.length; i++) {\n                    if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n                      tempTotalBounty++;\n                  }\n\n                  setSelectedHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * selectedRequest.prize}`)\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n\n      }\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}