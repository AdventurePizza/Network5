{"version":3,"sources":["firebaseContext.tsx","assets/green-loader.gif","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getRequest","Promise","resolve","isSuccessful","setRequest","getRequests","setAnswer","fetchBase","FirebaseProvider","children","useCallback","timeStamp","a","fetch","method","fetchRes","ok","json","request","headers","body","JSON","stringify","message","statusText","answer","requestTimestamp","Provider","value","useStyles","makeStyles","theme","createStyles","root","display","size","width","spacing","height","preview","containedSuccess","backgroundColor","palette","success","main","color","dark","disabled","Tezos","TezosToolkit","wallet","BeaconWallet","name","preferblackNetwork","setWalletProvider","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","versionNames","uuidv4","App","classes","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","useContext","useSnackbar","enqueueSnackbar","requests","setRequests","answers","setAnswers","version","view","setView","requestInput","setRequestInput","prizeInput","selectedRequest","setSelectedRequest","imageInput","setImageInput","image","setImage","messageInput","setMessageInput","resultImages","setResultImages","transactionWait","setTransactionWait","totalBounty","setTotalBounty","collectedBounty","setCollectedBounty","isMobile","innerWidth","getActiveAccount","clearActiveAccount","then","sync","address","console","log","requestPermissions","permissions","useEffect","tempTotalBounty","i","length","bounty","tempCollectedBounty","owner","result","timestamp","getProfiles","onRequestChange","data","concat","sort","b","parseFloat","on","off","slice","getAcc","getSearchedUnsplashImages","text","axios","get","params","query","authorization","searchImages","input","response","imageDataWanted","results","map","urls","alt_description","id","alt","imageLink","regular","thumbnailLink","thumb","className","style","fontSize","alignItems","margin","Select","label","onChange","e","target","href","MenuItem","textAlign","position","Button","title","onClick","unsync","marginTop","marginLeft","marginRight","overflowX","border","marginInline","overflowY","index","justifyContent","marginBottom","Avatar","variant","src","loadingGif","requestOperation","operationDetails","kind","TezosOperationType","TRANSACTION","destination","amount","prize","toString","catch","TextField","placeholder","fullWidth","event","Date","now","emit","IconButton","onKeyPress","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.d701387d.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\n\nexport interface IFirebaseContext {\n  getRequest: (key: string) => Promise<IFetchResponseBase>;\n  setRequest: (request) => Promise<IFetchResponseBase>;\n  getRequests: () => Promise<IFetchResponseBase>;\n  setAnswer: (answer, requestTimestamp) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getRequest: () => Promise.resolve({ isSuccessful: false }),\n  setRequest: () => Promise.resolve({ isSuccessful: false }),\n  getRequests: () => Promise.resolve({ isSuccessful: false }),\n  setAnswer: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network5-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getRequest = useCallback(\n    async (timeStamp: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request/${timeStamp}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setRequest = useCallback(\n    async (request): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ request: request }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getRequests =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/requests`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const setAnswer = useCallback(\n    async (answer, requestTimestamp): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/answer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ answer: answer, requestTimestamp: requestTimestamp }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getRequest,\n        setRequest,\n        getRequests,\n        setAnswer,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/green-loader.2c2db02c.gif\";","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\n\n//ui\nimport {\n  Button, Select, MenuItem, TextField, Avatar, IconButton, makeStyles, createStyles\n} from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient, TezosOperationType } from \"@airgap/beacon-sdk\";\nimport { TezosToolkit } from '@taquito/taquito'\nimport {\n  BeaconWallet,\n} from '@taquito/beacon-wallet'\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\nimport axios from 'axios';\nimport purple from \"@material-ui/core/colors/purple\";\nimport loadingGif from \"./assets/green-loader.gif\"\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    size: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n    },\n    preview: {\n      width: theme.spacing(40),\n      height: theme.spacing(40),\n    },\n    containedSuccess: {\n      backgroundColor: theme.palette.success.main,\n      color: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark\n      }\n    },\n    disabled: {}\n  }),\n);\n\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie')\nconst wallet = new BeaconWallet({\n  name: 'hicetnunc.xyz',\n  preferblackNetwork: 'mainnet',\n})\nTezos.setWalletProvider(wallet)\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network5backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const classes = useStyles();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n\n  const { getRequest, setRequest, getRequests, setAnswer } =\n    useContext(FirebaseContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [requests, setRequests] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [version] = useState(5);\n  const [view, setView] = useState(\"answers\");\n  const [requestInput, setRequestInput] = useState();\n  const [prizeInput, setPrizeInput] = useState(0.003);\n  const [selectedRequest, setSelectedRequest] = useState();\n  const [imageInput, setImageInput] = useState();\n  const [image, setImage] = useState();\n  const [messageInput, setMessageInput] = useState();\n  const [resultImages, setResultImages] = useState();\n  const [transactionWait, setTransactionWait] = useState();\n  const [totalBounty, setTotalBounty] = useState(0);\n  const [collectedBounty, setCollectedBounty] = useState(0);\n  const isMobile = window.innerWidth <= 500;\n  /*\n  useEffect(() => {\n    if (resultImages.length > 0) return;\n\n    searchSubmit('sky');\n  }, [isImagesEmpty, setImages, searchSubmit]);\n*/\n  useEffect(() => {\n    console.log(\"answers\")\n    console.log(answers)\n    let tempTotalBounty = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (answers[i].bounty)\n        tempTotalBounty += answers[i].bounty;\n    }\n    setTotalBounty(tempTotalBounty);\n\n    let tempCollectedBounty = 0;\n    for (let i = 0; i < answers.length; i++) {\n      if (activeAccount && answers[i].owner === activeAccount.address && answers[i].bounty)\n        tempCollectedBounty += answers[i].bounty;\n    }\n    setCollectedBounty(tempCollectedBounty);\n\n    console.log(\"tempTotalBounty \" + tempTotalBounty)\n    console.log(\"tempCollectedBounty \" + tempCollectedBounty)\n  }, [selectedRequest, answers]);\n\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getRequests();\n      console.log(result)\n      setRequests(result);\n      if (result.length > 0) {\n        setSelectedRequest(result[0]);\n        setAnswers(await getRequest(result[0].timestamp));\n      }\n    }\n    getProfiles();\n  }, [getRequests]);\n\n  useEffect(() => {\n    const onRequestChange = (data) => {\n      setRequests(\n        requests\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n    };\n\n    socket.on(\"request\", onRequestChange);\n\n    return () => {\n      socket.off(\"request\", onRequestChange);\n    };\n  }, [requests]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  const getSearchedUnsplashImages = async (text: string) =>\n    await axios.get('https://api.unsplash.com/search/photos?per_page=15', {\n      params: { query: text },\n      headers: {\n        authorization: 'Client-ID oSwI9b8UY-1ZV8yBYyH871XgVv8vCBT2jwj0xIol0hM'\n      }\n    });\n\n  const handleRequestInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRequestInput(event.target.value.slice(0, 250));\n  };\n\n  const handlePrizeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPrizeInput(event.target.value);\n  };\n\n  const handleImageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImageInput(event.target.value);\n  };\n\n  const handleMessageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(event.target.value.slice(0, 250));\n  };\n\n  const searchImages = async (input) => {\n    const response = await getSearchedUnsplashImages(input);\n    console.log(response);\n\n    const imageDataWanted = response.data.results.map(\n      ({ urls, alt_description, id }: IResponseDataUnsplash) => {\n        const { regular, thumb } = urls;\n        return {\n          alt: alt_description,\n          imageLink: regular,\n          thumbnailLink: thumb,\n          id: id\n        };\n      }\n    );\n\n    setResultImages(imageDataWanted);\n\n  };\n\n  const onKeyPressImageSearch = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      searchImages(event.target.value)\n    }\n  };\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n          width: \"100%\"\n        }}\n      >\n        <b>Network </b>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            let target;\n            if (e.target.value === 1) {\n              target = \"https://network1.cc/\";\n            } else if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            }\n            else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            }\n            else if (e.target.value === 4) {\n              target = \"https://adventurepizza.github.io/Network4/\";\n            }\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n          <MenuItem value={4}> {versionNames[4]}</MenuItem>\n          <MenuItem value={5}> {versionNames[5]}</MenuItem>\n\n        </Select>\n        &nbsp; 📠\n        {!isMobile &&\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\n            <b> Try Network, Request from the Network, Answer Requests, Reward Responses  </b>\n          </div>}\n      </div>\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\", backgroundColor: \"white\", margin: 6 }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n\n      </div>\n      {isMobile &&\n        <div style={{ textAlign: \"center\", width: \"100%\" }}>\n          <b> Try Network, Request from the Network, Answer Requests, Reward Responses 🧧 </b>\n        </div>}\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>Requests</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n\n        <div style={{ textAlign: \"center\", margin: 2 }}>\n          <Button\n            onClick={async () => {\n              //add req\n              setView(\"+request\");\n            }}\n            style={{ height: \"100%\", border: \"solid 2px \" }}\n          >\n            add new request\n          </Button>\n        </div>\n\n\n        {requests &&\n          requests.map((request) => (\n            <div\n              key={request.timestamp}\n              style={{ textAlign: \"center\", margin: 2 }}\n            >\n              <Button\n                title={request.timestamp}\n                onClick={async () => {\n                  //open answers\n                  //console.log(await getRequest(request.timestamp))\n                  setAnswers(await getRequest(request.timestamp));\n                  setView(\"answers\");\n                  setSelectedRequest(request);\n                }}\n                style={{ width: 300, marginInline: 4, border: \"solid 2px \" }}\n              >\n                {request.request}\n              </Button>\n            </div>\n          ))}\n      </div>\n\n      {view === \"answers\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13, overflowY: \"auto\" }}>\n            <b>Answers</b>\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              width: \"100%\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              overflowX: \"scroll\",\n            }}\n          >\n            {selectedRequest &&\n              <>\n                <div style={{ textAlign: \"center\", margin: 6 }}>\n                  <Button\n                    onClick={async () => {\n                      //add answer\n                      setView(\"+answer\");\n                    }}\n                    style={{ width: \"100%\", border: \"solid 2px \" }}\n                  >\n                    Total Posts {answers.length} Total Bounties {totalBounty} ꜩ Total Gains {collectedBounty} ꜩ\n                  </Button>\n                </div>\n                <div style={{ textAlign: \"center\", margin: 6 }}>\n                  <Button\n                    onClick={async () => {\n                      //add answer\n                      setView(\"+answer\");\n                    }}\n                    style={{ width: \"100%\", border: \"solid 2px \" }}\n                  >\n                    ADD\n                  </Button>\n                </div>\n              </>\n            }\n            {answers &&\n              answers.map((answer, index) => (\n                <div\n                  key={answer.timestamp}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n                  <div\n                    style={{\n                      width: \"100%\",\n                    }}\n                  >\n\n                    <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10 }}>\n                      {answer.image &&\n                        <Avatar variant=\"rounded\" src={answer.image.imageLink} alt={answer.image.alt} className={classes.preview} />}\n                    </div>\n                    <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10 }}>\n\n                      {transactionWait === answer.timestamp ? <img src={loadingGif} height=\"40\"></img> : (transactionWait === answer.timestamp * -1 ? <>Domo ✅</> :\n\n                        <Button\n                          variant=\"contained\"\n                          className={classes.containedSuccess}\n                          title={\"domo\"}\n                          onClick={async () => {\n                            // sent from activeAccount.address to answer.owner amount selectedRequest.prize\n                            setTransactionWait(answer.timestamp);\n                            dAppClient.requestOperation({\n                              operationDetails: [\n                                {\n                                  kind: TezosOperationType.TRANSACTION,\n                                  destination: answer.owner, // Send to ourselves\n                                  amount: (selectedRequest.prize * 1000000).toString(), // Amount in mutez, the smallest unit in Tezos\n                                },\n                              ],\n                            }).then(response => {\n                              console.log(response);\n                              setTransactionWait(answer.timestamp * -1);\n                              setAnswer({\n                                ...answer,\n                                bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                              }, selectedRequest.timestamp)\n\n                              setAnswers([\n                                ...answers.slice(0, index),\n                                {\n                                  ...answer,\n                                  bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                                },\n                                ...answers.slice(index + 1)\n                              ])\n\n                            }).catch(e => {\n                              console.log(e);\n                              setTransactionWait(0);\n                            });\n\n\n                          }}\n                          style={{ width: \"20%\", border: \"solid 2px \" }}\n                        >\n                          send a {selectedRequest.prize} ꜩ gift 🧧\n                        </Button>\n\n                      )}\n                    </div>\n                    <Button\n                      title={answer.timestamp}\n                      onClick={async () => {\n                        //open answers\n                      }}\n                      style={{ width: \"100%\", border: \"solid 2px \" }}\n                    >\n                      {answer.message}\n                    </Button>\n\n\n                  </div>\n\n                </div>\n              ))}\n          </div>\n        </>\n      }\n\n      {view === \"+request\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Request</b>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Request\"\n              variant=\"outlined\"\n              placeholder=\"recommend wallpaper\"\n              fullWidth\n              onChange={handleRequestInput}\n              value={requestInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  })\n                  setRequests(requests\n                    .concat([\n                      {\n                        ...requests,\n                        request: requestInput,\n                        prize: parseFloat(prizeInput),\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n\n                  setSelectedRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp\n                  });\n                  setView(\"answers\")\n\n                  socket.emit(\"request\", {\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  });\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n      }\n      {view === \"+answer\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Answer</b>\n            <br></br>\n            <br></br>\n            {selectedRequest.request}\n            <br></br>\n            <br></br>\n            <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n              <div className=\"background-icon-list\" >\n                {resultImages &&\n                  resultImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                    <IconButton\n                      key={id}\n                      onClick={() =>\n                        //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                        //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                        setImage({ alt, thumbnailLink, imageLink, id })\n                      }\n\n                    >\n                      <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} className={classes.size} />\n                    </IconButton>\n                  ))\n                }\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Search Unsplash\"\n                variant=\"outlined\"\n                placeholder=\"Sky\"\n                fullWidth\n                onChange={handleImageInput}\n                onKeyPress={onKeyPressImageSearch}\n                value={imageInput}\n              />\n              <div style={{ margin: 10 }}>\n                <Button\n                  onClick={() => {\n                    searchImages(imageInput)\n                  }}\n\n                >\n                  search\n                </Button>\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Message\"\n              variant=\"outlined\"\n              placeholder=\"Light blue can be refreshing\"\n              fullWidth\n              onChange={handleMessageInput}\n              value={messageInput}\n            />\n            <br></br>\n            <br></br>\n            <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n              {image &&\n                <Avatar variant=\"rounded\" src={image.imageLink} alt={image.alt} className={classes.preview} />}\n            </div>\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setAnswer({\n                    message: messageInput,\n                    image: image,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                    bounty: 0\n                  }, selectedRequest.timestamp)\n\n                  setAnswers(answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        image: image,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                        bounty: 0\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n                  setView(\"answers\")\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n\n      }\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}