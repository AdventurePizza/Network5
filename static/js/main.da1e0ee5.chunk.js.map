{"version":3,"sources":["firebaseContext.tsx","assets/green-loader.gif","assets/share_icon.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getRequest","Promise","resolve","isSuccessful","setRequest","getRequests","setAnswer","fetchBase","FirebaseProvider","children","useCallback","timeStamp","a","fetch","method","fetchRes","ok","json","request","headers","body","JSON","stringify","message","statusText","answer","requestTimestamp","Provider","value","useStyles","makeStyles","theme","createStyles","root","display","size","width","spacing","height","preview","containedSuccess","backgroundColor","palette","success","main","color","dark","disabled","Tezos","TezosToolkit","wallet","BeaconWallet","name","preferblackNetwork","setWalletProvider","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","versionNames","App","classes","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","useContext","enqueueSnackbar","useSnackbar","requests","setRequests","answers","setAnswers","version","view","setView","requestInput","setRequestInput","prizeInput","selectedRequest","setSelectedRequest","imageInput","setImageInput","image","setImage","messageInput","setMessageInput","resultImages","setResultImages","transactionWait","setTransactionWait","isMobile","innerWidth","hoverText","setHoverText","selectedHoverText","setSelectedHoverText","hoveringRequest","setHoveringRequest","selectedReqRef","useRef","selectedAnswerRef","selectedAnswer","setSelectedAnswer","answerOwnerDomains","setAnswerOwnerDomains","getActiveAccount","clearActiveAccount","then","sync","address","console","log","requestPermissions","permissions","useEffect","tempDomains","Array","length","i","domain","query","owner","variables","res","result","data","reverseRecord","fetchDomains","url1","URL","href","sharedReqTimestamp","searchParams","get","defaultRequest","sharedReq","find","timestamp","parseInt","tempAnswers","tempTotalBounty","bounty","current","scrollIntoView","behavior","inline","block","setTimeout","getProfiles","onRequestChange","concat","sort","b","parseFloat","on","off","slice","getAcc","getSearchedUnsplashImages","text","axios","params","authorization","searchImages","input","response","imageDataWanted","results","map","urls","alt_description","id","alt","imageLink","regular","thumbnailLink","thumb","className","style","fontSize","alignItems","marginLeft","fontFamily","marginRight","marginTop","Select","label","onChange","e","target","MenuItem","textAlign","position","margin","Button","title","onClick","unsync","overflowX","border","onMouseEnter","prize","onMouseLeave","Card","ref","raised","CardActionArea","paddingTop","bottom","right","navigator","clipboard","writeText","variant","src","share","overflowY","index","padding","justifyContent","marginBottom","Avatar","open","loadingGif","requestOperation","operationDetails","kind","TezosOperationType","TRANSACTION","destination","amount","toString","catch","marginInline","TextField","placeholder","fullWidth","event","Date","now","emit","IconButton","onKeyPress","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.da1e0ee5.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\n\nexport interface IFirebaseContext {\n  getRequest: (key: string) => Promise<IFetchResponseBase>;\n  setRequest: (request) => Promise<IFetchResponseBase>;\n  getRequests: () => Promise<IFetchResponseBase>;\n  setAnswer: (answer, requestTimestamp) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getRequest: () => Promise.resolve({ isSuccessful: false }),\n  setRequest: () => Promise.resolve({ isSuccessful: false }),\n  getRequests: () => Promise.resolve({ isSuccessful: false }),\n  setAnswer: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network5-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getRequest = useCallback(\n    async (timeStamp: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request/${timeStamp}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setRequest = useCallback(\n    async (request): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ request: request }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getRequests =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/requests`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const setAnswer = useCallback(\n    async (answer, requestTimestamp): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/answer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ answer: answer, requestTimestamp: requestTimestamp }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getRequest,\n        setRequest,\n        getRequests,\n        setAnswer,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/green-loader.2c2db02c.gif\";","export default __webpack_public_path__ + \"static/media/share_icon.339344cf.png\";","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\n\n//ui\nimport {\n  Button, Select, MenuItem, TextField, Avatar, IconButton, makeStyles, createStyles, Card, CardActionArea\n} from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient, TezosOperationType } from \"@airgap/beacon-sdk\";\nimport { TezosToolkit } from '@taquito/taquito'\nimport {\n  BeaconWallet,\n} from '@taquito/beacon-wallet'\n\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\nimport axios from 'axios';\nimport loadingGif from \"./assets/green-loader.gif\"\nimport share from \"./assets/share_icon.png\"\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    size: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n    },\n    preview: {\n      width: theme.spacing(40),\n      height: theme.spacing(40),\n    },\n    containedSuccess: {\n      backgroundColor: theme.palette.success.main,\n      color: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.success.dark\n      }\n    },\n    disabled: {}\n  }),\n);\n\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie')\nconst wallet = new BeaconWallet({\n  name: 'hicetnunc.xyz',\n  preferblackNetwork: 'mainnet',\n})\nTezos.setWalletProvider(wallet)\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network5backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\"];\n\nfunction App() {\n  const classes = useStyles();\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n\n  const { getRequest, setRequest, getRequests, setAnswer } =\n    useContext(FirebaseContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [requests, setRequests] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [version] = useState(5);\n  const [view, setView] = useState(\"answers\");\n  const [requestInput, setRequestInput] = useState();\n  const [prizeInput] = useState(0.003);\n  const [selectedRequest, setSelectedRequest] = useState();\n  const [imageInput, setImageInput] = useState();\n  const [image, setImage] = useState();\n  const [messageInput, setMessageInput] = useState();\n  const [resultImages, setResultImages] = useState();\n  const [transactionWait, setTransactionWait] = useState();\n  const isMobile = window.innerWidth <= 950;\n  const [hoverText, setHoverText] = useState(\"\");\n  const [selectedHoverText, setSelectedHoverText] = useState(\"\");\n  const [hoveringRequest, setHoveringRequest] = useState(0);\n  const selectedReqRef = useRef();\n  const selectedAnswerRef = useRef();\n  const [selectedAnswer, setSelectedAnswer] = useState();\n  const [answerOwnerDomains, setAnswerOwnerDomains] = useState([]);\n\n\n  useEffect(() => {\n    async function fetchDomains() {\n      let tempDomains = new Array(answers.length);;\n      for (let i = 0; i < answers.length; i++) {\n\n        let domain;\n        await fetch('https://api.tezos.domains/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            query: `\n              {\n                reverseRecord(address: \"`+ answers[i].owner + `\"){owner domain{name}}\n              }\n              `,\n            variables: {\n            },\n          }\n          ),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            if (result.data.reverseRecord) {\n              domain = result.data.reverseRecord.domain.name;\n              tempDomains[i] = domain;\n            }\n          });\n      }\n      setAnswerOwnerDomains(tempDomains);\n    }\n    fetchDomains()\n  }, [answers]);\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getRequests();\n      console.log(result)\n      setRequests(result);\n\n      const url1 = new URL(window.location.href);\n      let sharedReqTimestamp = url1.searchParams.get('request');\n\n      if (result.length > 0) {\n        let defaultRequest = result[0];\n        if (sharedReqTimestamp) {\n          console.log(sharedReqTimestamp)\n          const sharedReq = result.find(({ timestamp }) => timestamp === parseInt(sharedReqTimestamp));\n          defaultRequest = sharedReq;\n          console.log(sharedReq)\n        }\n\n        setSelectedRequest(defaultRequest);\n\n        let tempAnswers = await getRequest(defaultRequest.timestamp);\n        setAnswers(tempAnswers);\n        let tempTotalBounty = 0;\n        for (let i = 0; i < tempAnswers.length; i++) {\n          if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n            tempTotalBounty++;\n        }\n\n        setSelectedHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * 0.003}`)\n        selectedReqRef.current.scrollIntoView({ behavior: 'smooth', inline: \"center\", block: \"nearest\" })\n\n\n        setSelectedAnswer(parseInt(url1.searchParams.get('answer')))\n\n        setTimeout(function () {\n          if (selectedAnswerRef.current)\n            selectedAnswerRef.current.scrollIntoView({ behavior: 'smooth', block: \"center\" })\n        }, 2000);\n\n\n      }\n    }\n    getProfiles();\n  }, [getRequests, getRequest]);\n\n  useEffect(() => {\n    const onRequestChange = (data) => {\n      setRequests(\n        requests\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n    };\n\n    socket.on(\"request\", onRequestChange);\n\n    return () => {\n      socket.off(\"request\", onRequestChange);\n    };\n  }, [requests]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  const getSearchedUnsplashImages = async (text: string) =>\n    await axios.get('https://api.unsplash.com/search/photos?per_page=15', {\n      params: { query: text },\n      headers: {\n        authorization: 'Client-ID oSwI9b8UY-1ZV8yBYyH871XgVv8vCBT2jwj0xIol0hM'\n      }\n    });\n\n  const handleRequestInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRequestInput(event.target.value.slice(0, 250));\n  };\n\n  const handleImageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImageInput(event.target.value);\n  };\n\n  const handleMessageInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageInput(event.target.value.slice(0, 250));\n  };\n\n  const searchImages = async (input) => {\n    const response = await getSearchedUnsplashImages(input);\n    console.log(response);\n\n    const imageDataWanted = response.data.results.map(\n      ({ urls, alt_description, id }: IResponseDataUnsplash) => {\n        const { regular, thumb } = urls;\n        return {\n          alt: alt_description,\n          imageLink: regular,\n          thumbnailLink: thumb,\n          id: id\n        };\n      }\n    );\n\n    setResultImages(imageDataWanted);\n\n  };\n\n  const onKeyPressImageSearch = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      searchImages(event.target.value)\n    }\n  };\n\n  return (\n\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          marginLeft: 6,\n          width: \"80%\",\n\n        }}\n      >\n        <div\n          style={{\n            fontSize: \"1.5em\",\n            fontFamily: \"Tangerine\",\n            marginRight: 10,\n            marginTop: 6\n          }}\n        >\n          <b>Network </b>\n        </div>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            let target;\n            if (e.target.value === 1) {\n              target = \"https://network1.cc/\";\n            } else if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            }\n            else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            }\n            else if (e.target.value === 4) {\n              target = \"https://adventurepizza.github.io/Network4/\";\n            }\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n          <MenuItem value={4}> {versionNames[4]}</MenuItem>\n          <MenuItem value={5}> {versionNames[5]}</MenuItem>\n\n        </Select>\n        &nbsp; 📠\n        {!isMobile &&\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\n            <b> Try Network, Request from the Network, Answer Requests, Reward Responses  </b>\n          </div>}\n      </div>\n\n      <div\n        className=\"top-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\", backgroundColor: \"white\", margin: 6 }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n\n      </div>\n      {isMobile &&\n        <div style={{ textAlign: \"center\", width: \"100%\", marginTop: 10 }}>\n          <b> Try Network, Request from the Network, Answer Requests, Reward Responses 🧧 </b>\n        </div>}\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>Requests</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n\n        <div style={{ textAlign: \"center\", margin: 2 }}>\n\n          <Button\n            onClick={async () => {\n              //add req\n              setView(\"+request\");\n            }}\n            style={{ height: \"100%\", border: \"solid 2px \" }}\n          >\n            add new request\n          </Button>\n        </div>\n\n\n        {requests &&\n          requests.map((request) => (\n            <div\n              key={request.timestamp}\n              style={{ textAlign: \"center\", margin: 2 }}\n              onMouseEnter={\n                async () => {\n                  //fetch and set hover text\n                  if (selectedRequest !== request.timestamp) {\n                    let tempAnswers = await getRequest(request.timestamp);\n                    let tempTotalBounty = 0;\n                    for (let i = 0; i < tempAnswers.length; i++) {\n                      if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n                        tempTotalBounty++;\n                    }\n\n                    setHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * request.prize}`)\n                    setHoveringRequest(request.timestamp)\n                  }\n                }\n              }\n              onMouseLeave={() => {\n                setHoveringRequest(0)\n              }}\n            >\n\n              <Card\n                ref={(selectedRequest && request.timestamp === selectedRequest.timestamp) ? selectedReqRef : null}\n                raised={selectedRequest && request.timestamp === selectedRequest.timestamp}\n                onClick={async () => {\n                  //open answers\n                  //console.log(await getRequest(request.timestamp))\n\n                  setAnswers(await getRequest(request.timestamp));\n                  setView(\"answers\");\n                  setSelectedRequest(request);\n                  if (!isMobile) {\n                    setSelectedHoverText(hoverText)\n                  }\n                  else {\n                    let tempAnswers = await getRequest(request.timestamp);\n                    let tempTotalBounty = 0;\n                    for (let i = 0; i < tempAnswers.length; i++) {\n                      if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n                        tempTotalBounty++;\n                    }\n\n                    setSelectedHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * request.prize}`)\n\n                  }\n                  selectedReqRef.current.scrollIntoView({ behavior: 'smooth', inline: \"center\", block: \"nearest\" })\n                }}\n                style={{ width: 320, height: 85, margin: 2 }}\n              >\n                <CardActionArea\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  <div style={{ position: \"relative\", height: \"100%\" }}>\n                    <div style={{ fontSize: \"1.2em\", paddingTop: 10 }}>\n                      <b>{request.request}</b>\n                    </div>\n                    <div style={{ fontSize: \"0.9em\", position: \"absolute\", bottom: 10, width: \"100%\" }}>\n                      {(request.timestamp === hoveringRequest) && !(selectedRequest && request.timestamp === selectedRequest.timestamp) && <b> {hoverText}</b>}\n                      {(selectedRequest && request.timestamp === selectedRequest.timestamp) && <b> {selectedHoverText}</b>}\n\n                    </div>\n                    <div style={{ position: \"absolute\", right: 0, bottom: 0 }}>\n                      {((request.timestamp === hoveringRequest) || (selectedRequest && request.timestamp === selectedRequest.timestamp)) &&\n                        <Button\n                          onClick={async () => {\n                            console.log(window.location.href)\n\n                            //share\n                            navigator.clipboard.writeText(`https://asknetwork.xyz/?request=${selectedRequest.timestamp}`);\n                            enqueueSnackbar(\"Link copied !\", {\n                              variant: \"success\",\n                            });\n                          }}\n                        >\n                          <img src={share} alt=\"share\" width=\"25\" />\n                        </Button>}\n                    </div>\n                  </div>\n                </CardActionArea>\n              </Card>\n\n            </div>\n          ))}\n      </div>\n\n      {view === \"answers\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13, overflowY: \"auto\" }}>\n            <b>Answers</b>\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              width: isMobile ? \"100%\" : 400,\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              overflowX: \"scroll\",\n            }}\n          >\n            {selectedRequest &&\n              <>\n                <div style={{ textAlign: \"center\", margin: 6 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={async () => {\n                      //add answer\n                      setView(\"+answer\");\n                    }}\n                  >\n                    ADD\n                  </Button>\n                </div>\n              </>\n            }\n            {answers &&\n              answers.map((answer, index) => (\n                <div\n                  key={answer.timestamp}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n\n                  <Card\n                    ref={(answer.timestamp === selectedAnswer) ? selectedAnswerRef : null}\n                  >\n                    <div>\n                      <div\n                        style={{ textAlign: \"center\", padding: 10, fontSize: \"1.1em\" }}\n                      >\n                        <b>\n                          {answer.message}\n                        </b>\n                      </div>\n                      <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10 }}>\n                        {answer.image &&\n                          <Avatar variant=\"rounded\" src={answer.image.imageLink} alt={answer.image.alt} className={classes.preview} />}\n                      </div>\n\n                      <div\n                        style={{ textAlign: \"center\", padding: 10, fontSize: \"1.1em\" }}\n                      >\n\n\n                        <Button\n                          onClick={() => {\n                            window.open(\"https://adventurepizza.github.io/Assemble/?profile=\" + answer.owner);\n                            enqueueSnackbar((answer.owner + \" copied\"), {\n                              variant: \"success\",\n                            });\n                          }}\n                        >\n\n                          <b>\n                            {answerOwnerDomains[index] ? answerOwnerDomains[index] :\n                              answer.owner.slice(0, 6) + \"...\" + answer.owner.slice(32, 36)}\n\n                          </b>\n                        </Button>\n                        <b>\n                          received {answer.bounty} ꜩ\n                        </b>\n                      </div>\n\n                      <div style={{ justifyContent: \"center\", display: \"flex\", marginBottom: 10, position: \"relative\" }}>\n\n                        {transactionWait === answer.timestamp ? <img src={loadingGif} alt=\"confirming transaction\" height=\"40\"></img> : (transactionWait === answer.timestamp * -1 ? <>Domo ✅</> :\n\n                          <Button\n                            variant=\"contained\"\n                            className={classes.containedSuccess}\n                            title={\"domo\"}\n                            onClick={async () => {\n                              // sent from activeAccount.address to answer.owner amount selectedRequest.prize\n                              setTransactionWait(answer.timestamp);\n                              dAppClient.requestOperation({\n                                operationDetails: [\n                                  {\n                                    kind: TezosOperationType.TRANSACTION,\n                                    destination: answer.owner, // Send to ourselves\n                                    amount: (selectedRequest.prize * 1000000).toString(), // Amount in mutez, the smallest unit in Tezos\n                                  },\n                                ],\n                              }).then(response => {\n                                console.log(response);\n                                setTransactionWait(answer.timestamp * -1);\n                                setAnswer({\n                                  ...answer,\n                                  bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                                }, selectedRequest.timestamp)\n\n                                setAnswers([\n                                  ...answers.slice(0, index),\n                                  {\n                                    ...answer,\n                                    bounty: (answer.bounty ? answer.bounty : 0) + selectedRequest.prize\n                                  },\n                                  ...answers.slice(index + 1)\n                                ])\n\n                                enqueueSnackbar(\"Domo ✅\", {\n                                  variant: \"success\",\n                                });\n\n                              }).catch(e => {\n                                console.log(e);\n                                setTransactionWait(0);\n                              });\n\n\n                            }}\n                            style={{ border: \"solid 2px \" }}\n                          >\n                            send a {selectedRequest.prize} ꜩ gift 🧧\n                          </Button>\n\n                        )}\n                        <div style={{ position: \"absolute\", right: 0, bottom: 0 }}>\n                          <Button\n                            onClick={async () => {\n                              console.log(window.location.href)\n\n                              //share\n                              navigator.clipboard.writeText(`https://asknetwork.xyz/?request=${selectedRequest.timestamp}&&answer=${answer.timestamp}`);\n                              enqueueSnackbar(\"Link copied !\", {\n                                variant: \"success\",\n                              });\n                            }}\n                          >\n                            <img src={share} alt=\"share\" width=\"25\" />\n                          </Button>\n                        </div>\n                      </div>\n\n                    </div>\n                  </Card>\n\n                </div>\n              ))}\n          </div>\n        </>\n      }\n\n      {view === \"+request\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Request</b>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Request\"\n              variant=\"outlined\"\n              placeholder=\"recommend wallpaper\"\n              fullWidth\n              onChange={handleRequestInput}\n              value={requestInput}\n            />\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  })\n                  setRequests(requests\n                    .concat([\n                      {\n                        ...requests,\n                        request: requestInput,\n                        prize: parseFloat(prizeInput),\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n\n                  setSelectedRequest({\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp\n                  });\n                  setView(\"answers\")\n\n                  socket.emit(\"request\", {\n                    request: requestInput,\n                    prize: parseFloat(prizeInput),\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                  });\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n      }\n      {view === \"+answer\" &&\n        <>\n          <div style={{ fontSize: \"0.9em\", marginTop: 13, marginInline: 13 }}>\n            <b>Add Answer</b>\n            <br></br>\n            <br></br>\n            {selectedRequest.request}\n            <br></br>\n            <br></br>\n            <div className=\"background-container\" style={{ overflowY: 'auto' }}>\n              <div className=\"background-icon-list\" >\n                {resultImages &&\n                  resultImages.map(({ alt, thumbnailLink, imageLink, id }) => (\n                    <IconButton\n                      key={id}\n                      onClick={() =>\n                        //sendImage(imageLink, isSwitchChecked ? 'background' : 'image')\n                        //<img src={thumbnailLink} alt={alt} width={\"200\"} />\n                        setImage({ alt, thumbnailLink, imageLink, id })\n                      }\n\n                    >\n                      <Avatar variant=\"rounded\" src={thumbnailLink} alt={alt} className={classes.size} />\n                    </IconButton>\n                  ))\n                }\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Search Unsplash\"\n                variant=\"outlined\"\n                placeholder=\"Sky\"\n                fullWidth\n                onChange={handleImageInput}\n                onKeyPress={onKeyPressImageSearch}\n                value={imageInput}\n              />\n              <div style={{ margin: 10 }}>\n                <Button\n                  onClick={() => {\n                    searchImages(imageInput)\n                  }}\n\n                >\n                  search\n                </Button>\n              </div>\n            </div>\n            <br></br>\n            <br></br>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Message\"\n              variant=\"outlined\"\n              placeholder=\"Light blue can be refreshing\"\n              fullWidth\n              onChange={handleMessageInput}\n              value={messageInput}\n            />\n            <br></br>\n            <br></br>\n            <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n              {image &&\n                <Avatar variant=\"rounded\" src={image.imageLink} alt={image.alt} className={classes.preview} />}\n            </div>\n            <br></br>\n            <br></br>\n            <Button\n              onClick={async () => {\n                if (activeAccount && activeAccount.address) {\n                  let timestamp = Date.now();\n                  setAnswer({\n                    message: messageInput,\n                    image: image,\n                    owner: activeAccount.address,\n                    timestamp: timestamp,\n                    bounty: 0\n                  }, selectedRequest.timestamp)\n\n                  setAnswers(answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        image: image,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                        bounty: 0\n                      },\n                    ])\n                    .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp)));\n                  setView(\"answers\")\n\n                  let tempAnswers = answers\n                    .concat([\n                      {\n                        ...answers,\n                        message: messageInput,\n                        image: image,\n                        owner: activeAccount.address,\n                        timestamp: timestamp,\n                        bounty: 0\n                      },\n                    ]);\n\n                  let tempTotalBounty = 0;\n                  for (let i = 0; i < tempAnswers.length; i++) {\n                    if (tempAnswers[i].bounty && tempAnswers[i].bounty > 0)\n                      tempTotalBounty++;\n                  }\n\n                  setSelectedHoverText(`Responses ${tempAnswers.length} Rewards ${tempTotalBounty} Bounty ${tempTotalBounty * selectedRequest.prize}`)\n                }\n              }}\n              style={{ width: \"100%\", border: \"solid 2px \" }}\n            >\n              post\n            </Button>\n          </div>\n        </>\n\n      }\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}